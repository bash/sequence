[[operators]]
dotnet = { name = "Aggregate", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.aggregate" }
fsharp = { name = "Seq.fold", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#fold" }
rust = { name = "fold", url = "https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold" }
python = { name = "accumulate", url = "https://docs.python.org/3/library/itertools.html#itertools.accumulate" }

[[operators]]
dotnet = { name = "All", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.all" }
fsharp = { name = "Seq.forall", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#forall" }
python = { name = "all", url = "https://docs.python.org/3/library/functions.html#all" }
npm_itertools = { name = "all", url = "https://github.com/nvie/itertools.js#all" }
java = { name = "allMatch", url = "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#allMatch-java.util.function.Predicate-" }

[[operators]]
dotnet = { name = "Any", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.any" }
fsharp = { name = "Seq.exists", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#exists" }
python = { name = "any", url = "https://docs.python.org/3/library/functions.html#any" }
npm_itertools = { name = "any", url = "https://github.com/nvie/itertools.js#any" }
java = { name = "anyMatch", url = "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#anyMatch-java.util.function.Predicate-" }

# AsEnumerable from Linq omitted

[[operators]]
dotnet = { name = "Append", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.append" }

[[operators]]
dotnet = { name = "Average", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.average" }
fsharp = { name = "Seq.average", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#average"}
python = { name = "mean", url = "https://docs.python.org/3/library/statistics.html#statistics.mean" }

# Cast from Linq omitted

[[operators]]
dotnet = { name = "Concat", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.concat" }
fsharp = { name = "Seq.append", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#append"}

[[operators]]
dotnet = { name = "Contains", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.contains" }

# DefaultIfEmpty from Linq omitted

[[operators]]
dotnet = { name = "Count", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.count" }

[[operators]]
dotnet = { name = "Distinct", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.distinct" }

[[operators]]
dotnet = { name = "ElementAt", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.elementat" }

