[[operators]]
dotnet = { name = "Aggregate", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.aggregate" }
fsharp = { name = "Seq.fold", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#fold" }
rust = { name = "fold", url = "https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold" }
python = { name = "accumulate", url = "https://docs.python.org/3/library/itertools.html#itertools.accumulate" }

[[operators]]
dotnet = { name = "All", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.all" }
fsharp = { name = "Seq.forall", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#forall" }
python = { name = "all", url = "https://docs.python.org/3/library/functions.html#all" }
npm_itertools = { name = "all", url = "https://github.com/nvie/itertools.js#all" }
java = { name = "allMatch", url = "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#allMatch-java.util.function.Predicate-" }

[[operators]]
dotnet = { name = "Any", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.any" }
fsharp = { name = "Seq.exists", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#exists" }
python = { name = "any", url = "https://docs.python.org/3/library/functions.html#any" }
npm_itertools = { name = "any", url = "https://github.com/nvie/itertools.js#any" }
java = { name = "anyMatch", url = "https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#anyMatch-java.util.function.Predicate-" }

# AsEnumerable from Linq omitted

[[operators]]
dotnet = { name = "Append", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.append" }

[[operators]]
dotnet = { name = "Average", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.average" }
fsharp = { name = "Seq.average", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#average"}
python = { name = "mean", url = "https://docs.python.org/3/library/statistics.html#statistics.mean" }

# Cast from Linq omitted

[[operators]]
dotnet = { name = "Concat", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.concat" }
fsharp = { name = "Seq.append", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#append" }

[[operators]]
dotnet = { name = "Contains", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.contains" }
fsharp = { name = "Seq.contains", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#contains" }

# DefaultIfEmpty from Linq omitted

[[operators]]
dotnet = { name = "Count", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.count" }
fsharp = { name = "Seq.length", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#length" }

[[operators]]
dotnet = { name = "Distinct", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.distinct" }
fsharp = { name = "Seq.distinct", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#distinct" }

[[operators]]
dotnet = { name = "ElementAt", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.elementat" }
fsharp = { name = "Seq.item", url = "https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#item" }

# Empty from Linq omitted for now

[[operators]]
dotnet = { name = "Except", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.except" }

[[operators]]
dotnet = { name = "First", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.first" }

[[operators]]
dotnet = { name = "GroupBy", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.groupby" }

[[operators]]
dotnet = { name = "GroupJoin", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.groupjoin" }

[[operators]]
dotnet = { name = "Intersect", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.intersect" }

[[operators]]
dotnet = { name = "Join", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.join" }

[[operators]]
dotnet = { name = "Last", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.last" }

[[operators]]
dotnet = { name = "Max", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.max" }

[[operators]]
dotnet = { name = "Min", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.min" }

[[operators]]
dotnet = { name = "OfType", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.oftype" }

[[operators]]
dotnet = { name = "Order", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.order" }

[[operators]]
dotnet = { name = "OrderDescending", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.orderdescending" }

[[operators]]
dotnet = { name = "Prepend", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.prepend" }

# Range and Repeat from Linq omitted for now

[[operators]]
dotnet = { name = "Reverse", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.reverse" }

[[operators]]
dotnet = { name = "Select", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.select" }

[[operators]]
dotnet = { name = "SelectMany", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.selectmany" }

[[operators]]
dotnet = { name = "SequenceEqual", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.sequenceequal" }

[[operators]]
dotnet = { name = "Single", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.single" }

[[operators]]
dotnet = { name = "Skip", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.skip" }

[[operators]]
dotnet = { name = "SkipLast", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.skiplast" }

[[operators]]
dotnet = { name = "SkipWhile", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.skipwhile" }

[[operators]]
dotnet = { name = "Sum", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.sum" }

[[operators]]
dotnet = { name = "Take", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.take" }

[[operators]]
dotnet = { name = "TakeLast", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.takelast" }

[[operators]]
dotnet = { name = "TakeWhile", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.takewhile" }

# To[Collection] from Linq omitted for now

# TryGetNonEnumerated from Linq omitted

[[operators]]
dotnet = { name = "Union", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.union" }

[[operators]]
dotnet = { name = "Where", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.where" }

[[operators]]
dotnet = { name = "Zip", url = "https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.zip" }